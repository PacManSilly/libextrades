version: '3.8'

services:

  # web:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   command: serve --listen 8080 --single /home/dockeruser/app/dist
  #   container_name: libextrades-web
  #   env_file:
  #     - ./backend/.env.dev
  #   expose:
  #     - 8080
  #   environment:
  #     - VIRTUAL_PORT=8080
  #     - VIRTUAL_PATH=/

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    command: gunicorn --config gunicorn.conf.py src.wsgi:application
    container_name: libextrades-api
    expose:
      - 8000
    ports:
      - 8000:8000
    env_file:
      - ./backend/.env.dev
    volumes:
      - static_volume:/home/dockeruser/app/staticfiles
      - media_volume:/home/dockeruser/app/mediafiles
    depends_on:
      - db
    environment:
      - VIRTUAL_PATH=~^/(api|admin)/

  db:
    image: postgres:14-alpine
    container_name: libextrades-db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./backend/.env.dev

  # nginx-proxy:
  #   build:
  #     context: ./nginx
  #     dockerfile: Dockerfile.dev
  #   container_name: libextrades-nginx-proxy
  #   restart: always
  #   ports:
  #     - 8080:80
  #     # - 443:443
  #   volumes:
  #     - static_volume:/home/dockeruser/app/staticfiles
  #     - media_volume:/home/dockeruser/app/mediafiles
  #     - certs:/etc/nginx/certs
  #     - html:/usr/share/nginx/html
  #     - vhost:/etc/nginx/vhost.d
  #     - /var/run/docker.sock:/tmp/docker.sock:ro
  #   depends_on:
  #     - api
  #     - web


volumes:
  static_volume:
  media_volume:
  postgres_data:
  certs:
  html:
  vhost:
  acme: